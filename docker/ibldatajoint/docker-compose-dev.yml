# Setup containers for IBL datajoint pipeline ingestion routines
# Joseph Burling <joseph@datajoint.com>
# --------------------------------------------------------------------------------------
# Basic usage:
#   EXTERN_VOLUME=~/Datasets/iblalyx docker-compose -f docker-compose-dev.yml up -d
#   docker-compose -f docker-compose-dev.yml down --volumes
#
# alyx --dump_file=/int-brain-lab/shared/2022-01-12_alyxfull.sql.gz initdb loaddb

# Shared properties across services ----------------------------------------------------

version: "2.4"

x-alyx-env-vars: &alyx-env-vars
  ALYX_LOGIN: ${ALYX_LOGIN:-}
  ALYX_PORT: ${ALYX_PORT:-8000}
  ALYX_PWD: ${ALYX_PWD:-}
  ALYX_URL: ${ALYX_URL:-}
  HTTP_DATA_SERVER_LOGIN: ${HTTP_DATA_SERVER_LOGIN:?set HTTP_DATA_SERVER_LOGIN in .env file}
  HTTP_DATA_SERVER_PWD: ${HTTP_DATA_SERVER_PWD:?set HTTP_DATA_SERVER_PWD in .env file}
  PGDATABASE: ${ALYX_DB_NAME:-alyxdb}
  PGHOST: ${PGHOST:-pgserver}
  PGPASSWORD: ${ALYX_DB_PASSWORD:?set ALYX_DB_PASSWORD in .env file}
  PGUSER: ${ALYX_DB_USER:-alyxadmin}

x-dj-env-vars: &dj-env-vars
  DJ_HOST: ${DJ_HOST:-datajoint.internationalbrainlab.org}
  DJ_MODE: ${DJ_MODE:-test}
  DJ_PASS: ${DJ_PASS:-}
  DJ_USER: ${DJ_USER:-}
  S3_ACCESS: ${S3_ACCESS:-}
  S3_MIGRATE_BUCKET: ${S3_MIGRATE_BUCKET:-ibl-dj-external}
  S3_ROOT_PATH: ${S3_ROOT_PATH:-}
  S3_SECRET: ${S3_SECRET:-}

x-ibl-data-volume: &ibl-data-volume
  - type: volume
    source: datacache
    target: /int-brain-lab/data

x-ibl-shared-mount: &ibl-shared-mount
  - type: bind
    source: ${EXTERN_VOLUME:-../../shared}
    target: /int-brain-lab/shared

x-ibl-pipeline-mount: &ibl-pipeline-mount
  - type: bind
    source: ../../ibl_pipeline
    target: /int-brain-lab/IBL-pipeline/ibl_pipeline

x-shared-networks: &shared-networks
  networks:
    ingestion:

x-ibl-docker-image: &ibl-docker-image
  image: iamamutt/iblenv_alyx:latest

x-dj-pipeline-common: &dj-pipeline-common
  <<: *ibl-docker-image
  environment:
    <<: *dj-env-vars
    <<: *alyx-env-vars
  init: true
  <<: *shared-networks
  entrypoint:
    - ingest
  depends_on:
    alyx:
      condition: service_healthy
  volumes:
    - <<: *ibl-data-volume
    - <<: *ibl-shared-mount
    - <<: *ibl-pipeline-mount

services:
  # Postgres Server --------------------------------------------------------------------
  pgserver:
    container_name: postgres_db_server
    environment:
      POSTGRES_DB: ${ALYX_DB_NAME:-alyxdb}
      POSTGRES_PASSWORD: ${ALYX_DB_PASSWORD:?set ALYX_DB_PASSWORD in .env file}
      POSTGRES_USER: ${ALYX_DB_USER:-alyxadmin}
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready
      timeout: 15s
      interval: 1m0s
      retries: 3
      start_period: 30s
    image: postgres:13-bullseye
    <<: *shared-networks
    ports:
      - "5438:5432"
    volumes:
      - type: volume
        source: pgdata
        target: /var/lib/postgresql/data
        volume: {}

  # IBL Environment for DataJoint Ingestion --------------------------------------------
  alyx:
    <<: *ibl-docker-image
    environment:
      <<: *alyx-env-vars
    init: true
    entrypoint:
      - alyx
    command:
      - initdb
      - startserver
    container_name: alyx_db_server
    depends_on:
      pgserver:
        condition: service_healthy
    <<: *shared-networks
    ports:
      - ${ALYX_PORT:-8000}:${ALYX_PORT:-8000}
    volumes:
      - <<: *ibl-data-volume
      - <<: *ibl-shared-mount
    healthcheck:
      test:
        - CMD
        - alyx
        - checkserver
      timeout: 15s
      interval: 30s
      retries: 5
      start_period: 2m0s

  iblenv:
    <<: *dj-pipeline-common
    command:
      - config_init
      - --alyxhost=dev
      - dev

  # Postgres GUI -----------------------------------------------------------------------
  # http://localhost:8088/
  # System: PostgreSQL
  # Server: pgserver
  # Username: alyxadmin
  # Password: $ALYX_DB_PASSWORD
  adminer:
    environment:
      ADMINER_DEFAULT_SERVER: ${PGHOST:-pgserver}
      ADMINER_DESIGN: nette
    image: adminer
    <<: *shared-networks
    ports:
      - target: 8080
        published: 8088
    restart: always
    depends_on:
      alyx:
        condition: service_started

# Global Networks and Volumes ----------------------------------------------------------
<<: *shared-networks
volumes:
  datacache:
  pgdata:
