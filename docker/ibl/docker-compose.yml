# Setup containers for IBL datajoint pipeline ingestion routines
# Joseph Burling <joseph@datajoint.com>
# --------------------------------------------------------------------------------------
# Basic usage:
#   docker-compose build conda alyx ingest
#   docker-compose up --detach pgserver alyx ingest adminer
#
# Compose Script Example Usage:
#   ./compose --help
#   ./compose build up
#   ./compose --env=./admin/ingest.env build up
#   ./compose --force up
#   ./compose up
#
# docker-compose up --force-recreate --detach pgserver alyx ingest adminer
# docker exec -t ibl_alyx_1 alyx help
# Shared properties across services ----------------------------------------------------
x-user-build-args: &user-build-args
  GROUPNAME: ibl
  USERNAME: ${USER:-ibl}
  USER_GID: ${GID:-1000}
  USER_UID: ${UID:-1000}

x-common-platform: &common-platform
  platform: linux/${LNX_ARCH:-x86_64}

x-ibl-data-volume: &ibl-data-volume
  - type: volume
    source: datacache
    target: ${IBL_PATH_ROOT:?set IBL_PATH_ROOT path in .env file}/data

x-ibl-shared-mount: &ibl-shared-mount
  - type: bind
    source: ../../shared
    target: ${IBL_PATH_ROOT:?set IBL_PATH_ROOT path in .env file}/shared

x-shared-networks: &shared-networks
  networks:
    ingest_dev:

<<: *shared-networks

volumes:
  datacache:
  pgdata:

services:
  # Base Conda Environment -------------------------------------------------------------
  conda:
    image: ibl_conda_base
    <<: *common-platform
    init: true
    build:
      context: ../conda_base_debian
      args:
        <<: *user-build-args

  # Postgres Server --------------------------------------------------------------------
  pgserver:
    container_name: postgres_db_server
    image: postgres:13-bullseye
    <<: *common-platform
    <<: *shared-networks
    environment:
      - POSTGRES_DB=${ALYX_DB_NAME:-alyxdb}
      - POSTGRES_USER=${ALYX_DB_USER:-alyxadmin}
      - POSTGRES_PASSWORD=${ALYX_DB_PASSWORD:?set ALYX_DB_PASSWORD in .env file}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 60s
      timeout: 120s
      start_period: 20s
      retries: 3
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - 5438:5432

  # Alyx Database ----------------------------------------------------------------------
  alyx:
    container_name: alyx_db_server
    <<: *common-platform
    <<: *shared-networks
    volumes:
      - <<: *ibl-data-volume
      - <<: *ibl-shared-mount
    init: true
    depends_on:
      pgserver:
        condition: service_healthy
    build:
      context: ../..
      dockerfile: docker/ibl/alyx/Dockerfile
      args:
        <<: *user-build-args
    healthcheck:
      test: ["CMD", "alyx", "checkserver"]
      interval: 30s
      timeout: 20s
      start_period: 15s
      retries: 6
    environment:
      - IBL_PATH_ROOT=${IBL_PATH_ROOT:?set IBL_PATH_ROOT path in .env file}
      - HTTP_DATA_SERVER_LOGIN=${HTTP_DATA_SERVER_LOGIN:?set HTTP_DATA_SERVER_LOGIN in .env file}
      - HTTP_DATA_SERVER_PWD=${HTTP_DATA_SERVER_PWD:?set HTTP_DATA_SERVER_PWD in .env file}
      - PGPASSWORD=${ALYX_DB_PASSWORD:?set ALYX_DB_PASSWORD in .env file}
      - PGDATABASE=${ALYX_DB_NAME:-alyxdb}
      - PGUSER=${ALYX_DB_USER:-alyxadmin}
      - PGHOST=${PGHOST:-pgserver}
    ports:
      - "${ALYX_PORT:-8000}:${ALYX_PORT:-8000}"
    working_dir: ${IBL_PATH_ROOT}
    command: ["loadpubdump", "startserver"]

  # IBL Environment for DataJoint Ingestion --------------------------------------------
  ingest:
    <<: *common-platform
    <<: *shared-networks
    volumes:
      - <<: *ibl-data-volume
      - <<: *ibl-shared-mount
      - type: bind
        source: ../../ibl_pipeline
        target: ${IBL_PATH_ROOT:?set IBL_PATH_ROOT path in .env file}/ibldatajoint/ibl_pipeline
    init: true
    depends_on:
      alyx:
        condition: service_started # service_healthy
    build:
      context: ../..
      dockerfile: docker/ibl/ingest/Dockerfile
      args:
        <<: *user-build-args
        CONDA_ENV_FILE: ${CONDA_ENV_FILE:-__NULL}
        APT_REQUIREMENTS: ${APT_REQUIREMENTS:-docker/ibl/ingest/apt_requirements.txt}
    environment:
      - IBL_PATH_ROOT=${IBL_PATH_ROOT:?set IBL_PATH_ROOT path in .env file}
    expose:
      - ${ALYX_PORT:-8000}
    ports:
      - 9999:9999
    command: ["jupyter", "notebook", "-y", "--no-browser", "--port=9999"]

  adminer:
    image: adminer
    restart: always
    environment:
      - ADMINER_DEFAULT_SERVER=${PGHOST:-pgserver}
      - ADMINER_DESIGN=nette
    ports:
      - 8088:8080
    <<: *shared-networks
