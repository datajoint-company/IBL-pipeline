# Setup containers for IBL datajoint pipeline ingestion routines
# Joseph Burling <joseph@datajoint.com>
# --------------------------------------------------------------------------------------
# Basic usage:
#   docker-compose up --detach
#   docker-compose down
#   docker-compose up --detach jupyter
#   docker-compose down --volumes
#

version: "2.4"

# Shared properties across services ----------------------------------------------------
x-image-iblenv: &image-iblenv
  image: ghcr.io/${GITHUB_USERNAME:-iamamutt}/iblenv_alyx:latest

x-env-vars-alyx: &env-vars-alyx
  ALYX_LOGIN: ${ALYX_LOGIN:-}
  ALYX_PORT: ${ALYX_PORT:-8000}
  ALYX_PWD: ${ALYX_PWD:-}
  ALYX_SECRET_KEY: ${ALYX_SECRET_KEY:-supersecretalyxkey}
  ALYX_URL: ${ALYX_URL:-}
  HTTP_DATA_SERVER_LOGIN: ${HTTP_DATA_SERVER_LOGIN:?set HTTP_DATA_SERVER_LOGIN in .env file}
  HTTP_DATA_SERVER_PWD: ${HTTP_DATA_SERVER_PWD:?set HTTP_DATA_SERVER_PWD in .env file}
  PGDATABASE: ${ALYX_DB_NAME:-alyxdb}
  PGHOST: ${PGHOST:-pgserver}
  PGPASSWORD: ${ALYX_DB_PASSWORD:?set ALYX_DB_PASSWORD in .env file}
  PGUSER: ${ALYX_DB_USER:-alyxadmin}

x-env-vars-dj: &env-vars-dj
  DJ_HOST: ${DJ_HOST:-datajoint.internationalbrainlab.org}
  DJ_MODE: ${DJ_MODE:-test}
  DJ_PASS: ${DJ_PASS:-simple}
  DJ_USER: ${DJ_USER:-root}
  S3_ACCESS: ${S3_ACCESS:-}
  S3_MIGRATE_BUCKET: ${S3_MIGRATE_BUCKET:-ibl-dj-external-public}
  S3_ROOT_PATH: ${S3_ROOT_PATH:-}
  S3_SECRET: ${S3_SECRET:-}

x-volume-mount-data-cache:
  - &volume-mount-data-cache data_cache:/int-brain-lab/data

x-volume-bind-shared:
  - &volume-bind-shared ${LOCAL_SHARED:-../shared}:/int-brain-lab/shared

x-volume-bind-ibl-pipeline:
  - &volume-bind-ibl-pipeline ../ibl_pipeline:/int-brain-lab/IBL-pipeline/ibl_pipeline

x-service-ibl-common: &service-ibl-common
  <<: *image-iblenv
  environment:
    <<: *env-vars-alyx
  volumes:
    - *volume-bind-shared
    - *volume-mount-data-cache
  networks:
    iblenv:
  entrypoint: ["bash", "-lc"]
  command: "tail -f /dev/null"
  init: true

x-service-ibl-pipeline: &service-ibl-pipeline
  <<: *service-ibl-common
  environment:
    <<: *env-vars-alyx
    <<: *env-vars-dj
  entrypoint:
    - ingest
  depends_on:
    alyx:
      condition: service_healthy

# Global Networks and Volumes ----------------------------------------------------------
networks:
  iblenv:
    name: iblenv_alyx_network

volumes:
  data_cache:
    name: iblenv_alyx_data_cache
  pgdata:
    name: iblenv_alyx_pgdata

services:
  # Postgres Server --------------------------------------------------------------------
  pgserver:
    environment:
      POSTGRES_DB: ${ALYX_DB_NAME:-alyxdb}
      POSTGRES_PASSWORD: ${ALYX_DB_PASSWORD:?set ALYX_DB_PASSWORD in .env file}
      POSTGRES_USER: ${ALYX_DB_USER:-alyxadmin}
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready
      timeout: 15s
      interval: 30s
      retries: 5
      start_period: 10s
    image: postgres:13-bullseye
    networks:
      iblenv:
    ports:
      - "5438:5432"
    volumes:
      - type: volume
        source: pgdata
        target: /var/lib/postgresql/data
        volume: {}

  # IBL Environment for DataJoint Ingestion --------------------------------------------
  alyx:
    <<: *service-ibl-common
    entrypoint:
      - alyx
    command:
      - www
    depends_on:
      pgserver:
        condition: service_healthy
    healthcheck:
      test:
        - CMD
        - alyx
        - checkserver
      timeout: 15s
      interval: 30s
      retries: 5
      start_period: 2m0s
    ports:
      - ${ALYX_PORT:-8000}:${ALYX_PORT:-8000}

  ingest:
    <<: *service-ibl-pipeline
    command:
      - config_init
      - --alyxhost=dev
      - populate
      - ingest
      - --duration=-1
        --sleep=5
      - --backtrack=5

  populate_behavior:
    <<: *service-ibl-pipeline
    command:
      - config_init
      - --alyxhost=dev
      - populate
      - behavior
      - --duration=-1
      - --sleep=5
      - --backtrack=10

  iblenv:
    <<: *service-ibl-pipeline
    volumes:
      - *volume-bind-ibl-pipeline
      - *volume-bind-shared
      - *volume-mount-data-cache
    ports:
      - ${JUPYTER_PORT:-10000}:${JUPYTER_PORT:-10000}
    command: "conda info -a"
